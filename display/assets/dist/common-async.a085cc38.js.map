{"version":3,"sources":["src/services/utils/common-utils.ts","src/services/ant-design-pro/attendance.ts","src/services/ant-design-pro/meeting.ts","src/services/utils/antd-utils.ts","src/components/QRCode/index.tsx"],"sourcesContent":["import { API_BASE_URL, PHOTO_BASE_URL } from '@/request-config';\r\nimport { AttendanceType } from '../ant-design-pro/attendance';\r\n\r\nexport const getAPIURL = (pathName: string) => {\r\n  return API_BASE_URL + '/' + pathName;\r\n};\r\n\r\nexport const getPhotoURL = (filePath: string) => {\r\n  return PHOTO_BASE_URL + '/' + filePath;\r\n};\r\n\r\nexport const buildCheckInURL = (baseURL: string, attendance: AttendanceType) => {\r\n  const blob = encodeURIComponent(btoa(attendance._id));\r\n  const blob0 = encodeURIComponent(btoa((attendance.guestId as any).idNumber));\r\n  return baseURL + '/' + blob0 + '/' + blob;\r\n}\r\n","// @ts-ignore\r\n/* eslnumber-disable */\r\nimport { request } from '@umijs/max';\r\nimport { SortOrder } from 'antd/es/table/numbererface';\r\nimport { GuestType } from './guest';\r\n\r\nexport enum AttendanceStatus {\r\n  UNKNOWN = 0,\r\n  CHECKED_IN = 1,\r\n}\r\n\r\nexport const AttedanceStatusOptions = [\r\n  {\r\n    label: 'Chưa tham dự',\r\n    value: 0\r\n  },\r\n  {\r\n    label: 'Đã tham dự',\r\n    value: 1\r\n  },\r\n]\r\n\r\nexport type AttendanceType = {\r\n  _id: string;\r\n  meetingId: string;\r\n  seat: number;\r\n  day: number;\r\n  guestId: string | GuestType;\r\n  status: AttendanceStatus;\r\n  checkInTime: Date;\r\n};\r\n\r\n/** Get a list of attendances GET /attendances */\r\nexport function attendances(meetingId: string, day: string) {\r\n  return async (\r\n    params: {\r\n      pageSize?: number;\r\n      current?: number;\r\n      keyword?: string;\r\n    },\r\n    sort: Record<string, SortOrder>,\r\n    filter: Record<string, (string | number)[] | string | null>,\r\n  ) => {\r\n    filter = filter || {};\r\n    filter.meetingId = meetingId;\r\n    filter.day = day;\r\n\r\n    const queryParams: any = {\r\n      ...params,\r\n      ...filter,\r\n    };\r\n\r\n    if (sort) {\r\n      const sortEntry = Object.entries(sort)[0];\r\n      if (sortEntry) {\r\n        queryParams.sort = sortEntry[0];\r\n        queryParams.direction = sortEntry[1];\r\n      }\r\n    }\r\n\r\n    return request<{\r\n      data: AttendanceType[];\r\n      /** The total number of items in the list */\r\n      total?: number;\r\n      success?: boolean;\r\n    }>('/attendance', {\r\n      method: 'GET',\r\n      params: queryParams,\r\n    });\r\n  };\r\n}\r\n\r\n/** Get a single attendance GET /attendances/:id */\r\nexport async function getAttendance(id: string) {\r\n  const response = await request<{\r\n    data: AttendanceType;\r\n    success?: boolean;\r\n  }>(`/attendance/${id}`, {\r\n    method: 'GET',\r\n    params: {},\r\n  });\r\n\r\n  return response;\r\n}\r\n\r\n/** Update attendance PUT /attendances */\r\nexport async function updateAttendance(\r\n  data: { [key: string]: any },\r\n  options?: { [key: string]: any },\r\n) {\r\n  return request<{ success: boolean; data: AttendanceType }>(`/attendance/${data._id}`, {\r\n    data,\r\n    method: 'PUT',\r\n    ...(options || {}),\r\n  });\r\n}\r\n\r\n/** New attendance POST /attendances */\r\nexport async function addAttendance(\r\n  data: { [key: string]: any },\r\n  options?: { [key: string]: any },\r\n) {\r\n  return request<{ success: boolean; data: AttendanceType }>('/attendance', {\r\n    data,\r\n    method: 'POST',\r\n    ...(options || {}),\r\n  });\r\n}\r\n\r\n/** delete attendance DELETE /attendances */\r\nexport async function removeAttendances(data: { ids: string[] }, options?: { [key: string]: any }) {\r\n  return request<{ success: boolean; message: string }>('/attendance', {\r\n    data,\r\n    method: 'DELETE',\r\n    ...(options || {}),\r\n  });\r\n}\r\n","// @ts-ignore\r\n/* eslnumber-disable */\r\nimport { request } from '@umijs/max';\r\nimport { SortOrder } from 'antd/es/table/numbererface';\r\nimport { AttendanceType } from './attendance';\r\nimport { API_BASE_URL } from '@/request-config';\r\n\r\nexport type MeetingType = {\r\n  _id: string;\r\n  name: string;\r\n  time: Date;\r\n  daysCount: number;\r\n  duration: number;\r\n  createdAt?: Date;\r\n  updatedAt?: Date;\r\n};\r\n\r\n/** Get a list of meetings GET /meetings */\r\nexport async function meetings(\r\n  params: {\r\n    pageSize?: number;\r\n    current?: number;\r\n    keyword?: string;\r\n  },\r\n  sort: Record<string, SortOrder>,\r\n  filter: Record<string, (string | number)[] | null>,\r\n) {\r\n  const queryParams: any = {\r\n    ...params,\r\n    ...filter,\r\n  };\r\n\r\n  if (sort) {\r\n    const sortEntry = Object.entries(sort)[0];\r\n    if (sortEntry) {\r\n      queryParams.sort = sortEntry[0];\r\n      queryParams.direction = sortEntry[1];\r\n    }\r\n  }\r\n\r\n  return request<{\r\n    data: MeetingType[];\r\n    /** The total number of items in the list */\r\n    total?: number;\r\n    success?: boolean;\r\n  }>('/meeting', {\r\n    method: 'GET',\r\n    params: queryParams,\r\n  });\r\n}\r\n\r\n/** Get a single meeting GET /meetings/:id */\r\nexport async function getMeeting(id: string) {\r\n  const response = await request<{\r\n    data: MeetingType;\r\n    success?: boolean;\r\n  }>(`/meeting/${id}`, {\r\n    method: 'GET',\r\n    params: {},\r\n  });\r\n\r\n  return response;\r\n}\r\n\r\n/** Get a single meeting GET /meetings/report/:id */\r\nexport async function getMeetingReport(id: string, day: string) {\r\n  const response = await request<{\r\n    data: { meeting: MeetingType; attendances: AttendanceType[] };\r\n    success?: boolean;\r\n  }>(`/meeting/report/${id}?d=${day}`, {\r\n    method: 'GET',\r\n    params: {},\r\n  });\r\n\r\n  return response.data;\r\n}\r\n\r\n/** Update meeting PUT /meetings */\r\nexport async function updateMeeting(\r\n  data: { [key: string]: any },\r\n  options?: { [key: string]: any },\r\n) {\r\n  return request<{ success: boolean; data: MeetingType }>(`/meeting/${data._id}`, {\r\n    data,\r\n    method: 'PUT',\r\n    ...(options || {}),\r\n  });\r\n}\r\n\r\n/** New meeting POST /meetings */\r\nexport async function addMeeting(data: { [key: string]: any }, options?: { [key: string]: any }) {\r\n  return request<{ success: boolean; data: MeetingType }>('/meeting', {\r\n    data,\r\n    method: 'POST',\r\n    ...(options || {}),\r\n  });\r\n}\r\n\r\n/** delete meeting DELETE /meetings */\r\nexport async function removeMeetings(data: { ids: string[] }, options?: { [key: string]: any }) {\r\n  return request<{ success: boolean; message: string }>('/meeting', {\r\n    data,\r\n    method: 'DELETE',\r\n    ...(options || {}),\r\n  });\r\n}\r\n\r\nexport async function generateInviteSheet(id: string) {\r\n  const response = await request<{\r\n    data: { meeting: MeetingType; attendances: AttendanceType[] };\r\n    success?: boolean;\r\n  }>(`/meeting/generate/${id}`, {\r\n    method: 'GET',\r\n    params: {},\r\n  });\r\n\r\n  return response.data;\r\n}\r\n\r\nexport async function printQRSheet(id: string, fileName: string, accessToken: string) {\r\n  const response = await fetch(`${API_BASE_URL}/meeting/print/${id}`, {\r\n    headers: { Authorization: `Bearer ${accessToken}` },\r\n  });\r\n  const blob = await response.blob();\r\n  const url = window.URL.createObjectURL(blob);\r\n\r\n  // Create a temporary <a> element\r\n  const a = document.createElement('a');\r\n  a.href = url;\r\n  a.download = fileName;\r\n  document.body.appendChild(a);\r\n  a.click();\r\n\r\n  // Cleanup\r\n  a.remove();\r\n  window.URL.revokeObjectURL(url);\r\n}\r\n\r\nexport async function resetMeeting(id: string, day: string) {\r\n  const response = await request<{\r\n    data: { meeting: MeetingType; attendances: AttendanceType[] };\r\n    success?: boolean;\r\n  }>(`/meeting/reset/${id}?d=${day}`, {\r\n    method: 'GET'\r\n  });\r\n\r\n  return response.data;\r\n}\r\n\r\nexport async function getCheckInURL() {\r\n  const response = await request<string>('/meeting/checkin-url', {\r\n    method: 'GET',\r\n  });\r\n\r\n  return response;\r\n}\r\n","import { ColumnsState } from '@ant-design/pro-components';\r\nimport { TablePaginationConfig } from 'antd';\r\n\r\nexport function tableColumnState(\r\n  key: string,\r\n  state: Record<string, ColumnsState>,\r\n  setState: Function,\r\n): any {\r\n  return {\r\n    value: state,\r\n    onChange: (map: Record<string, ColumnsState>) => {\r\n      if (JSON.stringify(map) !== JSON.stringify(state)) {\r\n        setState(map);\r\n        localStorage.setItem(key, JSON.stringify(map));\r\n      }\r\n    },\r\n    persistenceKey: key,\r\n    persistenceType: 'localStorage',\r\n  };\r\n}\r\n\r\nexport function paginationOption(storageKey: string, pageSizeOptions: number[]): TablePaginationConfig {\r\n  return {\r\n    pageSizeOptions,\r\n    showSizeChanger: true,\r\n    showQuickJumper: true,\r\n    defaultPageSize: parseInt(localStorage.getItem(storageKey) || pageSizeOptions[0].toString()),    \r\n    onShowSizeChange: (current: number, size: number) => {\r\n      localStorage.setItem(storageKey, size.toString());\r\n    },\r\n  }\r\n}\r\n\r\nexport function expandFormData(fields: Record<string, any>): Record<string, any> {\r\n  const result: Record<string, any> = {};\r\n\r\n  for (const [key, value] of Object.entries(fields)) {\r\n    const subKeys = key.split('.');\r\n    if (subKeys.length === 1) {\r\n      result[key] = value;\r\n      continue;\r\n    }\r\n\r\n    let subObj = result;\r\n    for (let i = 0; i < subKeys.length - 1; ++i) {\r\n      const subKey = subKeys[i];\r\n      if (!subObj[subKey]) {\r\n        subObj[subKey] = {};\r\n      }\r\n      subObj = subObj[subKey];\r\n    }\r\n\r\n    subObj[subKeys[subKeys.length - 1]] = value;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport function flattenFormData(\r\n  obj?: Record<string, any>,\r\n  prefix: string = '',\r\n): Record<string, any> {\r\n  if (!obj) {\r\n    return {};\r\n  }\r\n\r\n  let flattened: Record<string, any> = {};\r\n  for (let key in obj) {\r\n    if (typeof obj[key] === 'object' && obj[key] !== null) {\r\n      Object.assign(flattened, flattenFormData(obj[key], prefix + key + '.'));\r\n    } else {\r\n      flattened[prefix + key] = obj[key];\r\n    }\r\n  }\r\n  return flattened;\r\n}\r\n\r\nexport function createConnectQuery(\r\n  current: number[],\r\n  update: number[],\r\n): Record<string, any> | undefined {\r\n  current = current || [];\r\n  update = update || [];\r\n\r\n  if (!current.length && !update.length) {\r\n    return undefined;\r\n  }\r\n\r\n  const result: Record<string, any> = {};\r\n  current = current.filter((id) => !update.includes(id));\r\n  if (current.length) {\r\n    result.disconnect = current.map((id) => ({ id }));\r\n  }\r\n\r\n  if (update.length) {\r\n    result.createOrConnect = {\r\n      product: {\r\n        connect: update.map((id) => ({ id })),\r\n        position: 0\r\n      },\r\n    };\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport function isEmptyObject(x: any): boolean {\r\n  if (Array.isArray(x)) {\r\n    return !x.length;\r\n  }\r\n\r\n  if (x && x.toNumber) {\r\n    return x.toNumber() === 0;\r\n  }\r\n\r\n  return !x;\r\n}\r\n","import { FC, useEffect, useRef, useState } from 'react';\r\nimport QRCode from 'react-qr-code';\r\n\r\nconst CopyableQRCode: FC<any> = ({ value, height, ...props }) => {\r\n  const canvasRef = useRef(null);\r\n  const svgRef = useRef(null); // Reference to the QRCode's SVG\r\n  const [imageSrc, setImageSrc] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (!svgRef.current) return;\r\n\r\n    // Get the SVG content\r\n    const svg = svgRef.current;\r\n    const canvas: any = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    const svgData = new XMLSerializer().serializeToString(svg);\r\n    const img = new Image();\r\n\r\n    img.onload = () => {\r\n      canvas.width = img.width;\r\n      canvas.height = img.height;\r\n      ctx.drawImage(img, 0, 0);\r\n\r\n      // Convert the canvas to a base64 image URL\r\n      const dataURL = canvas.toDataURL('image/png');\r\n      setImageSrc(dataURL);\r\n    };\r\n\r\n    const svgBlob = new Blob([svgData], { type: 'image/svg+xml;charset=utf-8' });\r\n    const url = URL.createObjectURL(svgBlob);\r\n    img.src = url;\r\n\r\n    return () => URL.revokeObjectURL(url); // Clean up the object URL\r\n  }, [value]);\r\n\r\n  return (\r\n    <div>\r\n      {/* Render the QR Code SVG invisibly */}\r\n      <div style={{ display: 'none' }}>\r\n        {!!value && <QRCode ref={svgRef} value={value} {...props} />}\r\n      </div>\r\n\r\n      {/* Hidden Canvas (for processing only) */}\r\n      <canvas ref={canvasRef} style={{ display: 'none' }}></canvas>\r\n\r\n      {/* Display the Image */}\r\n      {imageSrc && <img src={imageSrc} alt=\"QR Code\" style={{ cursor: 'pointer', height }} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CopyableQRCode;\r\n"],"names":[],"mappings":"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"}