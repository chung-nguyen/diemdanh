{"version":3,"sources":["src/pages/GuestList/components/CreateForm.tsx","src/pages/GuestList/components/UpdateForm.tsx","src/pages/GuestList/index.tsx"],"sourcesContent":["import {\r\n  DrawerForm,\r\n  ProFormSelect,\r\n  ProFormText,\r\n  ProFormTextArea,\r\n} from '@ant-design/pro-components';\r\nimport { useIntl } from '@umijs/max';\r\nimport React from 'react';\r\n\r\nimport { type GuestType } from '@/services/ant-design-pro/guest';\r\n\r\ntype CreateFormProps = {\r\n  createModalVisible: boolean;\r\n  children?: React.ReactNode;\r\n  onSubmit: (values: GuestType) => Promise<void>;\r\n  onCancel: () => void;\r\n};\r\n\r\nconst CreateForm: React.FC<CreateFormProps> = (props) => {\r\n  const { createModalVisible, onSubmit, onCancel } = props;\r\n\r\n  const intl = useIntl();\r\n\r\n  return (\r\n    <DrawerForm\r\n      title={intl.formatMessage({ id: 'pages.form.metafields.new', defaultMessage: 'Thêm khách mời' })}\r\n      width={600}\r\n      open={createModalVisible}\r\n      onFinish={onSubmit}\r\n      drawerProps={{\r\n        onClose: onCancel,\r\n        destroyOnClose: true,\r\n      }}\r\n      grid={true}\r\n      initialValues={{\r\n        description: '',\r\n        key: '',\r\n        namespace: '',\r\n        value: '',\r\n      }}\r\n    >\r\n      <ProFormText colProps={{ span: 24 }} name=\"idNumber\" label=\"Số CCCD\" />\r\n      <ProFormText colProps={{ span: 24 }} name=\"phoneNumber\" label=\"Điện thoại\" />\r\n      <ProFormText colProps={{ span: 24 }} name=\"email\" label=\"Email\" />\r\n      <ProFormText colProps={{ span: 24 }} name=\"fullName\" label=\"Tên\" />\r\n      <ProFormText colProps={{ span: 24 }} name=\"office\" label=\"Chức vụ\" />\r\n      <ProFormText colProps={{ span: 24 }} name=\"workplace\" label=\"Đơn vị\" />\r\n    </DrawerForm>\r\n  );\r\n};\r\n\r\nexport default CreateForm;\r\n","import {\n  DrawerForm,\n  ProFormSelect,\n  ProFormText,\n  ProFormTextArea,\n} from '@ant-design/pro-components';\nimport { useIntl } from '@umijs/max';\nimport React from 'react';\n\nimport { type GuestType } from '@/services/ant-design-pro/guest';\nimport Avatar from 'antd/es/avatar/avatar';\nimport { UserOutlined } from '@ant-design/icons';\nimport { getPhotoURL } from '@/services/utils/common-utils';\nimport { Flex } from 'antd';\n\nexport type UpdateFormProps = {\n  onCancel: () => void;\n  onSubmit: (values: GuestType) => Promise<void>;\n  updateModalVisible: boolean;\n  values: Partial<GuestType>;\n};\n\nconst UpdateForm: React.FC<UpdateFormProps> = ({\n  onSubmit,\n  onCancel,\n  updateModalVisible,\n  values,\n  ...props\n}) => {\n  const intl = useIntl();\n\n  return (\n    <DrawerForm\n      title={[values.fullName, values.idNumber].join(' ')}\n      width={600}\n      open={updateModalVisible}\n      onFinish={onSubmit}\n      drawerProps={{\n        onClose: onCancel,\n        destroyOnClose: true,\n      }}\n      initialValues={values}\n    >\n      <Flex justify=\"center\">\n        <Avatar size={256} src={getPhotoURL(values.idNumber + '.jpg')} icon={<UserOutlined />} />\n      </Flex>\n      <ProFormText colProps={{ span: 24 }} name=\"idNumber\" label=\"Số CCCD\" />\n      <ProFormText colProps={{ span: 24 }} name=\"phoneNumber\" label=\"Điện thoại\" />\n      <ProFormText colProps={{ span: 24 }} name=\"email\" label=\"Email\" />\n      <ProFormText colProps={{ span: 24 }} name=\"fullName\" label=\"Tên\" />\n      <ProFormText colProps={{ span: 24 }} name=\"office\" label=\"Chức vụ\" />\n      <ProFormText colProps={{ span: 24 }} name=\"workplace\" label=\"Đơn vị\" />\n    </DrawerForm>\n  );\n};\n\nexport default UpdateForm;\n","import type { ActionType, ColumnsState, ProColumns } from '@ant-design/pro-components';\nimport { FooterToolbar, PageContainer, ProTable } from '@ant-design/pro-components';\nimport { useIntl, history } from '@umijs/max';\nimport { Avatar, Button, message, Popconfirm, Space, Typography } from 'antd';\nimport dayjs from 'dayjs';\nimport React, { useRef, useState } from 'react';\n\nimport { useServiceProviders } from '@/services/ant-design-pro/api';\nimport {\n  addGuest,\n  guests,\n  removeGuests,\n  updateGuest,\n  type GuestType,\n} from '@/services/ant-design-pro/guest';\nimport { tableColumnState } from '@/services/utils/antd-utils';\n\nimport { PlusOutlined, UserOutlined } from '@ant-design/icons';\nimport CreateForm from './components/CreateForm';\nimport UpdateForm from './components/UpdateForm';\nimport { getPhotoURL } from '@/services/utils/common-utils';\n\n/**\n * Add node\n *\n * @param fields\n */\nconst handleAdd = async (fields: GuestType) => {\n  const hide = message.loading('Đang xử lý');\n\n  try {\n    await addGuest({ ...fields });\n    hide();\n    message.success('Đã thêm thành công');\n    return true;\n  } catch (error) {\n    hide();\n    message.error('Vui lòng thử lại!');\n    return false;\n  }\n};\n\n/**\n * Update node\n *\n * @param fields\n */\nconst handleUpdate = async (fields: GuestType, currentRow?: GuestType) => {\n  const hide = message.loading('Đang xử lý');\n\n  try {\n    await updateGuest({\n      ...currentRow,\n      ...fields,\n    });\n    hide();\n    message.success('Cập nhật thành công');\n    return true;\n  } catch (error) {\n    hide();\n    message.error('Vui lòng thử lại!');\n    return false;\n  }\n};\n\n/**\n * Delete node\n *\n * @param selectedRows\n */\nconst handleRemove = async (selectedRows: GuestType[]) => {\n  const hide = message.loading('Đang xử lý');\n  if (!selectedRows) return true;\n\n  try {\n    await removeGuests({\n      ids: selectedRows.map((row: any) => row._id),\n    });\n    hide();\n    message.success('Xóa thành công!');\n    return true;\n  } catch (error) {\n    hide();\n    message.error('Vui lòng thử lại!');\n    return false;\n  }\n};\n\nconst GuestList: React.FC = () => {\n  const [createModalVisible, handleCreateModalVisible] = useState<boolean>(false);\n  const [updateModalVisible, handleUpdateModalVisible] = useState<boolean>(false);\n  const [showDetail, setShowDetail] = useState<boolean>(false);\n  const actionRef = useRef<ActionType>();\n  const [currentRow, setCurrentRow] = useState<GuestType>();\n  const [selectedRowsState, setSelectedRows] = useState<GuestType[]>([]);\n  const [columnsStateMap, setColumnsStateMap] = useState<Record<string, ColumnsState>>({\n    width: { show: false },\n    height: { show: false },\n    alt: { show: false },\n  });\n  const intl = useIntl();\n  const { getMediaUrl } = useServiceProviders();\n\n  const columns: ProColumns<GuestType>[] = [\n    {\n      title: 'Số CCCD',\n      dataIndex: 'idNumber',\n      sorter: true,\n      render: (dom, entity) => (\n        <Space>\n          <Avatar src={getPhotoURL(entity.idNumber + '.jpg')} icon={<UserOutlined />} />\n          <a\n            onClick={() => {\n              handleUpdateModalVisible(true);\n              setCurrentRow(entity);\n            }}\n          >\n            {dom}\n          </a>\n        </Space>\n      ),\n    },\n    {\n      title: 'Điện thoại',\n      dataIndex: 'phoneNumber',\n      sorter: true\n    },\n    {\n      title: 'Email',\n      dataIndex: 'email',\n      sorter: true\n    },\n    {\n      title: 'Tên',\n      dataIndex: 'fullName',\n      sorter: true,\n    },\n    {\n      title: 'Chức vụ',\n      dataIndex: 'office',\n      sorter: true,\n    },\n    {\n      title: 'Đơn vị',\n      dataIndex: 'workplace',\n      sorter: true,\n    },\n    {\n      title: 'Created At',\n      dataIndex: 'createdAt',\n      render: (dom, entity) => <Space>{dayjs(entity.createdAt).format('DD MMM YYYY HH:mm')}</Space>,\n      hideInTable: true,\n      hideInSearch: true,\n    },\n    {\n      title: 'Updated At',\n      dataIndex: 'updatedAt',\n      render: (dom, entity) => <Space>{dayjs(entity.updatedAt).format('DD MMM YYYY HH:mm')}</Space>,\n      hideInTable: true,\n      hideInSearch: true,\n    },\n    {\n      title: 'Thao tác',\n      dataIndex: 'option',\n      valueType: 'option',\n      render: (_, record) => [\n        <a\n          key=\"edit\"\n          onClick={() => {\n            handleUpdateModalVisible(true);\n            setCurrentRow(record);\n          }}\n        >\n          Sửa\n        </a>,\n        <Popconfirm\n          key=\"delete\"\n          title=\"Chắc chắn?\"\n          onConfirm={async () => {\n            await handleRemove([record]);\n            setSelectedRows([]);\n            actionRef.current?.reloadAndRest?.();\n          }}\n        >\n          <a>Xóa</a>\n        </Popconfirm>,\n      ],\n    },\n  ];\n\n  return (\n    <PageContainer>\n      <ProTable<GuestType, TableListPagination>\n        columnsState={tableColumnState('guest', columnsStateMap, setColumnsStateMap)}\n        headerTitle=\"Danh sách\"\n        actionRef={actionRef}\n        rowKey=\"_id\"\n        search={{\n          labelWidth: 120,\n        }}\n        pagination={{\n          showSizeChanger: true,\n          showQuickJumper: true,\n          defaultPageSize: 20,\n          pageSizeOptions: [20, 50, 100, 200],\n        }}\n        toolBarRender={() => [\n          <Button\n            type=\"primary\"\n            key=\"primary\"\n            onClick={() => {\n              handleCreateModalVisible(true);\n            }}\n          >\n            <PlusOutlined /> Tạo mới\n          </Button>,\n        ]}\n        request={guests}\n        columns={columns}\n        rowSelection={{\n          onChange: (_, selectedRows) => {\n            setSelectedRows(selectedRows);\n          },\n        }}\n      />\n      {selectedRowsState?.length > 0 && (\n        <FooterToolbar\n          extra={\n            <div>\n              Selected&nbsp;\n              <a\n                style={{\n                  fontWeight: 600,\n                }}\n              >\n                {selectedRowsState.length}\n              </a>\n              &nbsp; items\n            </div>\n          }\n        >\n          <Popconfirm\n            key=\"delete\"\n            title=\"Chắc chắn?\"\n            onConfirm={async () => {\n              await handleRemove(selectedRowsState);\n              setSelectedRows([]);\n              actionRef.current?.reloadAndRest?.();\n            }}\n          >\n            <Button>Xóa nhiều dòng</Button>\n          </Popconfirm>\n        </FooterToolbar>\n      )}\n\n      <CreateForm\n        createModalVisible={createModalVisible}\n        onSubmit={async (value: GuestType) => {\n          const success = await handleAdd(value);\n          if (success) {\n            handleCreateModalVisible(false);\n            if (actionRef.current) {\n              actionRef.current.reload();\n            }\n          }\n        }}\n        onCancel={() => {\n          handleCreateModalVisible(false);\n          setCurrentRow(undefined);\n          setShowDetail(false);\n        }}\n      />\n\n      <UpdateForm\n        onSubmit={async (value) => {\n          const success = await handleUpdate(value, currentRow);\n\n          if (success) {\n            handleUpdateModalVisible(false);\n            setCurrentRow(undefined);\n            setShowDetail(false);\n\n            if (actionRef.current) {\n              actionRef.current.reload();\n            }\n          }\n        }}\n        onCancel={() => {\n          handleUpdateModalVisible(false);\n          setCurrentRow(undefined);\n          setShowDetail(false);\n        }}\n        updateModalVisible={updateModalVisible}\n        values={currentRow || {}}\n      />\n    </PageContainer>\n  );\n};\n\nexport default GuestList;\n"],"names":[],"mappings":"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"}